 bool wordPattern(string pattern, string s) {
        
        vector<string>temp;
        unordered_map<char,string>mp;
        unordered_map<string,char>count;
        string word;
        stringstream is(s);
        
        while(is>>word)
        {
            temp.push_back(word);
        }
        
        if(temp.size()!=pattern.size())
        {
            return false;
        }
        for(int i=0;i<pattern.length();i++)
        {
            if(mp.find(pattern[i])==mp.end())
            {
                mp[pattern[i]]=temp[i];
                if(count.find(temp[i])==count.end())
                {
                    count[temp[i]]=pattern[i];
                }
                else
                {
                    if(count[temp[i]]!=pattern[i])
                        return false;
                }
            }
            else
            {
                if(mp[pattern[i]]!=temp[i])
                {
                    return false;
                }
            }
        }
        
        return true;
    }
