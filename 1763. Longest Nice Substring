string longestNiceSubstring(string s) {

        if(s.length()<2)
        {
            return "";
        }

        unordered_set<char> uset(s.begin(),s.end());

        for(int i=0;i<s.length();i++)
        {
            if(uset.count(tolower(s[i])) && uset.count(toupper(s[i])))
            {
                continue;
            }

            string prev = longestNiceSubstring(s.substr(0,i));
            string next = longestNiceSubstring(s.substr(i+1));

            s = prev.length()>=next.length()?prev:next;
        }

        return s;

    }
};
